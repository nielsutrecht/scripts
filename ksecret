#!/usr/bin/env python3

import base64
import json
import subprocess

import sys


def read_command(command):
    result = subprocess.run(command.split(), stdout=subprocess.PIPE)
    return result.stdout.decode('utf-8')


def list_secrets():
    text = read_command("kubectl get secrets -o name")
    return list(map(lambda it: it.split('/')[1], text.splitlines()))


def read_secret(secret):
    text = read_command("kubectl get secret " + secret + " -o json")
    data = json.loads(text)['data']
    return list(map(lambda kv: (kv[0], base64.b64decode(kv[1]).decode('utf-8')), data.items()))


def read_secret_key(secret, key):
    tuples = list(filter(lambda it: it[0] == key, read_secret(secret)))
    if len(tuples) == 0:
        print("Key" + key + " not found in secret" + secret)
    elif len(tuples) > 1:
        print("Secret " + secret + " has multiple keys for " + key)
    else:
        return tuples[0][1]


def main(argv):
    if len(argv) == 1:
        secrets = list_secrets()
        for s in secrets:
            print(s)
    elif len(argv) == 2:
        secrets = read_secret(argv[1])
        for s in secrets:
            print(s[0] + "\t" + s[1])
    elif len(argv) == 3:
        print(read_secret_key(argv[1], argv[2]), end='')
    else:
        println("Expected 0-2 arguments")


if __name__ == "__main__":
    main(sys.argv)
