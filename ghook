#!/usr/bin/env python3

import sys
import re
from git import Git

git = Git()


def _read_file(path):
    with open(path, 'r') as f:
        return f.read()


def _write_file(path, text):
    with open(path, 'r+') as f:
        f.write(text)


def insert_branch(path, regex):
    branch = git.get_current_branch()
    match = re.match(regex, branch)

    if not match:
        print("\nWARN: Branch '" + branch + "' does not match regex '" + regex + "'!\n")
        return

    expected = match.group(1)
    content = _read_file(path)

    if not content.startswith(expected):
        new_message = expected + " " + content
        _write_file(path, new_message)
        print("Commit message altered:\n" + new_message)


def check_message(path, regex):
    content = _read_file(path)
    match = re.match(regex, content.strip())

    if not match:
        print("Expected commit message:\n" + content.strip() + "\n\nto match regex '" + regex + "'")
        sys.exit(1)


def check_branch(path, regex):
    branch = git.get_current_branch()
    match = re.match(regex, branch)

    if not match:
        print("\nWARN: Branch '" + branch + "' does not match regex '" + regex + "'!\n")
        return

    expected = match.group(1)
    content = _read_file(path)

    if not content.startswith(expected):
        print("Expected commit message:\n" + content.strip() + "\n\nto start with issue ID '" + expected + "'")
        sys.exit(1)


def expect_branch(regex):
    branch = git.get_current_branch()
    match = re.match(regex, branch)

    if not match:
        print("\nERROR: Branch '" + branch + "' does not match regex '" + regex + "'!\n")
        sys.exit(1)


def main(argv):
    if len(argv) == 4 and argv[1] == "insert-branch":
        insert_branch(argv[2], argv[3])
    elif len(argv) == 4 and argv[1] == "check-message":
        check_message(argv[2], argv[3])
    elif len(argv) == 4 and argv[1] == "check-branch":
        check_branch(argv[2], argv[3])
    elif len(argv) == 3 and argv[1] == "expect-branch":
        expect_branch(argv[2])
    else:
        usage = """ Git Hook Util
    Usage:
        ghook <command> <commit message path> <param>
        
    Commands:
        expect-branch   - Checks if current branch matches a regex, errors when it does not
        insert-branch   - Inserts the issue number from the current branch into the commit message
        check-message   - Checks if the commit message matches a regex
        check-branch    - Checks if the commit message contains the issue number based on current branch
        
    Examples:
        ghook expect-branch "^([A-Z]{1,10}-[0-9]{1,6})"
        ghook insert-branch /path/to/message "^([A-Z]{1,10}-[0-9]{1,6})"
        ghook check-message /path/to/message "^[A-Z]{1,10}-[0-9]{1,6}$"
        ghook check-branch /path/to/message "^([A-Z]{1,10}-[0-9]{1,6})"
        """
        print(usage)


if __name__ == "__main__":
    main(sys.argv)
